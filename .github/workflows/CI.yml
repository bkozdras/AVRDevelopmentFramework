name: avr-framework-ci
on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
jobs:
  wait-for-previous-workflow-finished:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: "Block concurrent workflow executions"
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  set-unknown-state-badges-for-CI:
    runs-on: ubuntu-latest
    needs: wait-for-previous-workflow-finished
    steps:
      - name: "Create badge BuildDockerImage with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeBuildDockerImage.json
          label: Build
          message: unknown
          color: grey
      - name: "Create badge UTX8664Cmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge UTX8664Build with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge UTX8664CTest with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CTest.json
          label: CTest
          message: unknown
          color: grey
      - name: "Create badge UTX8664CoverageCMake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageCMake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge UTX8664CoverageMakeAndLcov with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageMakeAndLcov.json
          label: Make-Lcov
          message: unknown
          color: grey
      - name: "Create badge AVRLibCmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibCmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge AVRLibBuild with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibBuild.json
          label: Make-Build
          message: unknown
          color: grey
  start-azure-runner:
    runs-on: ubuntu-latest
    needs: set-unknown-state-badges-for-CI
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Start GitHub self-hosted runner
        run: |
          az vm start -g github-ci-resource-group -n github-ci-runner
  build-avr-framework-docker-image:
    runs-on: [self-hosted, Azure, Docker]
    needs: start-azure-runner
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Build image from Dockerfile
        run: docker --log-level=debug build . --file=docker/Dockerfile --tag nemuuser/avr-build-env:latest --rm=true
      - name: "Create badge BuildDockerImage with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeBuildDockerImage.json
          label: Build
          message: passing
          color: green
      - name: "Create badge BuildDockerImage with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeBuildDockerImage.json
          label: Build
          message: failing
          color: red
      - name: "Print existing docker images before cleanup the dangling ones"
        if: ${{ always() }}
        run: docker images --all
      - name: "Clean dangling docker images"
        if: ${{ always() }}
        run: docker rmi $(docker images -f "dangling=true" -q) || echo "No images to delete"
      - name: "Print existing docker images after cleanup the dangling ones"
        if: ${{ always() }}
        run: docker images --all
  build-avr-framework-for-avr-target-with-example-executables-in-container:
    runs-on: [self-hosted, Azure, Docker]
    needs: build-avr-framework-docker-image
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/avrlib/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/avrlib/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceAVR
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceAVR
          run: |
            cd workspaceAVR
            mkdir -p build_AVR
      - name: "Run CMake for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceAVR
          run: |
            cd workspaceAVR/build_AVR
            bash ../ci/avrlib/runCMake.sh
      - name: "Create badge AVRLibCmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibCmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge AVRLibCmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibCmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make to build AVR Framework library"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceAVR
          run: |
            cd workspaceAVR/build_AVR
            bash ../ci/avrlib/runMake.sh
      - name: "Create badge AVRLibBuild with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibBuild.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge AVRLibBuild with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeAVRLibBuild.json
          label: Make-Build
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceAVR
          run: |
            cd workspaceAVR
            rm -r -f build_AVR
  run-UT-in-avr-framework-container:
    runs-on: [self-hosted, Azure, Docker]
    needs: build-avr-framework-docker-image
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/ut/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/ut/runCTest.sh
          chmod +x ${{ github.workspace }}/ci/ut/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            cd workspaceUT
            mkdir -p build_UT_x86_64
      - name: "Run CMake for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            cd workspaceUT/build_UT_x86_64
            bash ../ci/ut/runCMake.sh
      - name: "Create badge UTX8664Cmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge UTX8664Cmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            cd workspaceUT/build_UT_x86_64
            bash ../ci/ut/runMake.sh
      - name: "Create badge UTX8664Build with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge UTX8664Build with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: failing
          color: red
      - name: "Run CTest for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            cd workspaceUT/build_UT_x86_64
            bash ../ci/ut/runCTest.sh
      - name: "Create badge UTX8664CTest with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CTest.json
          label: CTest
          message: passing
          color: green
      - name: "Create badge UTX8664CTest with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CTest.json
          label: CTest
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspaceUT
          run: |
            cd workspaceUT
            rm -r -f build_UT_x86_64
  run-UT-LCOV-in-avr-framework-container:
    runs-on: [self-hosted, Azure, Docker]
    needs: build-avr-framework-docker-image
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/ut_lcov/installAndRunCppCoveralls.sh
          chmod +x ${{ github.workspace }}/ci/ut_lcov/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/ut_lcov/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            cd workspace_UT_LCOV
            mkdir -p build_UT_x86_64_LCOV
      - name: "Run CMake for UT and code coverage enabled"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            cd workspace_UT_LCOV/build_UT_x86_64_LCOV
            bash ../ci/ut_lcov/runCMake.sh
      - name: "Create badge UTX8664CoverageCMake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageCMake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge UTX8664CoverageCMake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageCMake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make and Lcov for UT with enabled coverage"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            cd workspace_UT_LCOV/build_UT_x86_64_LCOV
            bash ../ci/ut_lcov/runMake.sh
      - name: "Create badge UTX8664CoverageMakeAndLcov with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageMakeAndLcov.json
          label: Make-Lcov
          message: passing
          color: green
      - name: "Create badge UTX8664CoverageMakeAndLcov with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: 536fc4300ff360bc55fbf7d1b618ef4c
          filename: badgeUTX8664CoverageMakeAndLcov.json
          label: Make-Build
          message: failing
          color: red
      - name: "Prepare coverage output file to be published to coveralls.io"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            cd workspace_UT_LCOV/build_UT_x86_64_LCOV
            cat ut-code-coverage.info
            sed -i 's|SF:/workspace_UT_LCOV/|SF:|g' ut-code-coverage.info
            cat ut-code-coverage.info
      - name: Publish code coverate report on coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: "AVR Framework Unit Tests Code Coverage"
          path-to-lcov: ${{ github.workspace }}/build_UT_x86_64_LCOV/ut-code-coverage.info
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/avr-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_UT_LCOV
          run: |
            cd workspace_UT_LCOV
            rm -r -f build_UT_x86_64_LCOV
  stop-azure-runner:
    runs-on: ubuntu-latest
    needs: [build-avr-framework-docker-image, build-avr-framework-for-avr-target-with-example-executables-in-container, run-UT-in-avr-framework-container, run-UT-LCOV-in-avr-framework-container]
    if: ${{ always() }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Stop GitHub self-hosted runner
        run: |
          az vm deallocate -g github-ci-resource-group -n github-ci-runner --no-wait
